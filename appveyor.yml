version: '{build}'

configuration:
  - Debug
  - Release

environment:
  matrix:
    - compiler: msvc-10-seh
      generator: "Visual Studio 10 2010 Win64"
      extra_cmake_args: '-DBOOST_INCLUDEDIR=%APPVEYOR_BUILD_FOLDER%\_deps\boost -DBOOST_LIBRARYDIR=%APPVEYOR_BUILD_FOLDER%\_deps\boost\lib64-msvc-10.0 -DBoost_USE_STATIC_LIBS=1 -DBENCHMARK_ENABLE_CXX11=0'

    - compiler: msvc-12-seh
      generator: "Visual Studio 12 2013"

    - compiler: msvc-12-seh
      generator: "Visual Studio 12 2013 Win64"

    - compiler: msvc-14-seh
      generator: "Visual Studio 14 2015"
      extra_cmake_args: '-DBUILD_SHARED_LIBS=1'

    - compiler: msvc-14-seh
      generator: "Visual Studio 14 2015 Win64"
      extra_cmake_args: '-DBUILD_SHARED_LIBS=1'

    - compiler: gcc-5.3.0-posix
      generator: "MinGW Makefiles"
      cxx_path: 'C:\mingw-w64\i686-5.3.0-posix-dwarf-rt_v4-rev0\mingw32\bin'

matrix:
  fast_finish: true

install:
  # git bash conflicts with MinGW makefiles
  - if "%generator%"=="MinGW Makefiles" (set "PATH=%PATH:C:\Program Files\Git\usr\bin;=%")
  - if not "%cxx_path%"=="" (set "PATH=%PATH%;%cxx_path%")
  # Download and extract a MSVC10-friendly Boost.
  - ps: >-
      if ($env:compiler.StartsWith("msvc-10")) {
        mkdir _deps
        pushd _deps
        cinst innoextract
        Start-FileDownload 'http://netix.dl.sourceforge.net/project/boost/boost-binaries/1.56.0/boost_1_56_0-msvc-10.0-64.exe'
        innoextract boost_1_56_0-msvc-10.0-64.exe -I boost -I lib64-msvc-10.0 -s -p
        mv app boost
        popd
      }

# TODO Remove this. This is a hack to work around bogus warning messages
# See http://goo.gl/euguBI for more information.
before_build:
  - del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  - del "C:\Program Files (x86)\MSBuild\12.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  - del "C:\Program Files (x86)\MSBuild\4.0\Microsoft.Common.Targets\ImportAfter\Xamarin.Common.targets"


build_script:
  - mkdir _build
  - cd _build
  - echo %configuration%
  - cmake -G "%generator%" %extra_cmake_args% ..
  - cmake --build . --config %configuration% -- /m

test_script:
  - ctest -C %configuration% --timeout 300 --output-on-failure

artifacts:
  - path: '_build/CMakeFiles/*.log'
    name: logs
  - path: '_build/Testing/**/*.xml'
    name: test_results

